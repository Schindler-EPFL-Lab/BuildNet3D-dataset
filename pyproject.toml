[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "buildnet3d-dataset"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "bpy>=4.0.0",
    "jsonpickle>=4.0.1",
    "matplotlib>=3.10.0",
    "networkx>=3.4.2",
    "open3d>=0.18.0",
    "pyntcloud>=0.3.1",
    "pytransform3d>=3.10.0",
    "tyro>=0.9.3",
]

[tool.hatch.build.targets.wheel]
packages = ["buildnet3d_dataset"]

# RUFF
[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = ["F722", "F821"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-third-party = ["FlirImageExtractor"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
